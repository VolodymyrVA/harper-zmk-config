#include <dt-bindings/zmk/indicators.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    behaviors {
        MY_Hold_Tap: MY_Hold_Tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        F_Dance: F_Dance {
            compatible = "zmk,behavior-tap-dance";
            label = "F_DANCE";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LS(LG(LC(LA(F))))>;
        };

        ESC_dance: ESC_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_DANCE";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp ESCAPE>;
        };

        CAPS_dance: CAPS_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_DANCE";
            #binding-cells = <0>;
            bindings = <&kp F15>, <&kp ESCAPE>;

            tapping-term-ms = <250>;
        };

        Layer_dance: Layer_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp LEFT_COMMAND>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC      &MY_Hold_Tap LS(LG(N1)) NUMBER_1  &MY_Hold_Tap LS(LG(N2)) NUMBER_2  &kp N3  &kp N4     &kp N5              &kp N6      &kp N7      &kp N8     &MY_Hold_Tap MINUS N9        &MY_Hold_Tap EQUAL N0                         &kp BACKSPACE
&kp TAB      &kp Q                             &kp W                             &kp E   &kp R      &kp T               &kp Y       &kp U       &kp I      &MY_Hold_Tap LEFT_BRACKET O  &MY_Hold_Tap RIGHT_BRACKET P                  &kp BSPC
&CAPS_dance  &kp A                             &kp S                             &kp D   &kp F      &kp G               &kp H       &ESC_dance  &kp K      &kp L                        &MY_Hold_Tap LS(LA(LC(LG(SPACE)))) SEMICOLON  &kp SQT
&kp LSHFT    &kp Z                             &kp X                             &kp C   &kp V      &kp B               &kp C_MUTE  &none       &kp N      &kp M                        &kp COMMA                                     &kp DOT
&kp FSLH     &kp RSHFT                         &kp LCTRL                         &mo 3   &kp LCTRL  &kp LALT  &kp LGUI  &mo 1       &kp SPACE   &kp ENTER  &kp F14                      &mo 2                                         &kp RALT       &kp RCTRL
                                                                                                                        &kp RGUI                                                                                                                     &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            bindings = <
&kp ESC         &kp F1           &kp F2       &kp F3       &kp F4      &kp F5                 &kp F6      &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN  &kp HASH     &kp DOLLAR  &kp PERCENT            &kp LCTRL   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp CAPSLOCK    &kp N1           &kp N2       &kp N3       &kp N4      &kp N5                 &kp N6      &kp N7         &kp N8        &kp N9                &kp N0                 &kp BACKSLASH
&kp LEFT_SHIFT  &kp MINUS        &kp EQUAL    &kp KP_PLUS  &kp F11     &kp F12                &kp C_MUTE  &none          &kp LBKT      &kp RBKT              &kp COMMA              &kp PERIOD
&kp SEMICOLON   &kp RSHFT        &kp LCTRL    &kp LGUI     &kp LCTRL   &kp LALT     &kp LGUI  &mo 1       &kp SPACE      &kp SPACE     &kp F14               &kp RGUI               &kp RALT       &kp RCTRL
                                                                                              &kp RGUI                                                                                             &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
            bindings = <
&trans      &trans     &trans     &trans    &trans     &trans              &trans          &trans          &trans        &trans     &trans     &trans
&trans      &trans     &trans     &trans    &trans     &trans              &trans          &kp LBKT        &kp RBKT      &kp MINUS  &kp EQUAL  &trans
&trans      &trans     &trans     &trans    &trans     &trans              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans     &trans
&kp LSHIFT  &trans     &trans     &trans    &trans     &trans              &trans          &trans          &trans        &trans     &trans     &trans
&trans      &kp RSHFT  &kp LCTRL  &kp LGUI  &kp LCTRL  &kp LALT  &kp LGUI  &mo 1           &kp SPACE       &kp SPACE     &mo 2      &kp RGUI   &kp RALT  &kp RCTRL
                                                                           &kp RGUI                                                                      &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        adjust_layer {
            bindings = <
&out OUT_BLE       &bt BT_SEL 0                     &bt BT_SEL 1                       &bt BT_SEL 2                      &bt BT_CLR                       &out OUT_USB                             &none     &none      &none      &none      &none  &none
&rgb_ug RGB_TOG    &rgb_ug RGB_BRD                  &rgb_ug RGB_BRI                    &rgb_ug RGB_SPD                   &rgb_ug RGB_SPI                  &rgb_ug RGB_EFF                          &none     &none      &kp UP     &none      &none  &none
&ext_power EP_TOG  &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(218,100,50)  &rgb_ug RGB_COLOR_HSB(120,97,50)  &rgb_ug RGB_COLOR_HSB(60,0,100)  &rgb_ug RGB_COLOR_HSB(64,100,52)         &none     &kp LEFT   &kp DOWN   &kp RIGHT  &none  &none
&sys_reset         &bootloader                      &none                              &none                             &ind IND_ON                      &ind BAT_ST                              &none     &none      &none      &none      &none  &none
&none              &none                            &kp LCTRL                          &mo 3                             &kp LALT                         &mo 3                             &mo 2  &mo 1     &kp SPACE  &kp SPACE  &mo 2      &mo 3  &mo 1  &kp RALT
                                                                                                                                                                                                   &kp RGUI                                                 &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };
    };
};
